version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: heurekka-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src:cached
      - ./public:/app/public:cached
      - ./next.config.ts:/app/next.config.ts:ro
      - ./package.json:/app/package.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./.env.local:/app/.env.local:ro
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
    networks:
      - heurekka-network
    restart: unless-stopped
    stdin_open: true
    tty: true

  # Backend service (reference to the backend container)
  backend:
    image: heurekka-backend:latest
    container_name: heurekka-backend-dev
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - HOST=0.0.0.0
      - CORS_ORIGIN=http://localhost:3000
      - DATABASE_URL=postgresql://heurekka:heurekka123@postgres:5432/heurekka_dev
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - postgres
      - redis
      - elasticsearch
    networks:
      - heurekka-network

  # PostgreSQL Database with PostGIS extension
  postgres:
    image: postgis/postgis:16-3.4-alpine
    container_name: heurekka-postgres-dev
    environment:
      POSTGRES_DB: heurekka_dev
      POSTGRES_USER: heurekka
      POSTGRES_PASSWORD: heurekka123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - heurekka-network

  # Redis for job queues and caching
  redis:
    image: redis:7-alpine
    container_name: heurekka-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    networks:
      - heurekka-network

  # Elasticsearch for search functionality
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: heurekka-elasticsearch-dev
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data_dev:/usr/share/elasticsearch/data
    networks:
      - heurekka-network

volumes:
  postgres_data_dev:
    name: heurekka_postgres_data_dev
  redis_data_dev:
    name: heurekka_redis_data_dev
  elasticsearch_data_dev:
    name: heurekka_elasticsearch_data_dev

networks:
  heurekka-network:
    name: heurekka-network-dev
    driver: bridge