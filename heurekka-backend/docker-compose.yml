services:
  # PostgreSQL Database with PostGIS extension
  postgres:
    image: postgis/postgis:16-3.4-alpine
    container_name: heurekka-postgres
    environment:
      POSTGRES_DB: heurekka_dev
      POSTGRES_USER: heurekka
      POSTGRES_PASSWORD: heurekka123
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U heurekka -d heurekka_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - heurekka-network

  # Redis for job queues and caching
  redis:
    image: redis:7-alpine
    container_name: heurekka-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - heurekka-network

  # Elasticsearch for search functionality
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: heurekka-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - heurekka-network

  # Main Application Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: heurekka-backend
    environment:
      - NODE_ENV=development
      - PORT=3001
      - HOST=0.0.0.0
      - DATABASE_URL=postgresql://heurekka:heurekka123@postgres:5432/heurekka_dev
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - SUPABASE_URL=https://your-project.supabase.co
      - SUPABASE_ANON_KEY=your-anon-key-here
      - SUPABASE_SERVICE_KEY=your-service-key-here
      - JWT_SECRET=dev-jwt-secret-change-in-production
      - CORS_ORIGIN=http://localhost:3000
      - LOG_LEVEL=debug
    ports:
      - "3001:3001"
    volumes:
      - ./src:/app/src:ro
      - ./package.json:/app/package.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - heurekka-network
    restart: unless-stopped

  # Optional: Admin tools for development
  adminer:
    image: adminer:4.8.1
    container_name: heurekka-adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: dracula
    depends_on:
      - postgres
    networks:
      - heurekka-network
    profiles:
      - tools

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: heurekka-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - heurekka-network
    profiles:
      - tools

# Persistent volumes
volumes:
  postgres_data:
    name: heurekka_postgres_data
  redis_data:
    name: heurekka_redis_data
  elasticsearch_data:
    name: heurekka_elasticsearch_data

# Network configuration
networks:
  heurekka-network:
    name: heurekka-network
    driver: bridge